#include "environment.h"

void kenai::core::bindEnvironment(sol::state_view& lua) {
    lua.new_usertype<Environment>("Environment",
        "new", sol::factories(
            []() { return new Environment(); }
        ),
        "adjustmentBrightness", sol::property(&Environment::getAdjustmentBrightness, &Environment::setAdjustmentBrightness),
        "adjustmentColorCorrection", sol::property(&Environment::getAdjustmentColorCorrection, &Environment::setAdjustmentColorCorrection),
        "adjustmentContrast", sol::property(&Environment::getAdjustmentContrast, &Environment::setAdjustmentContrast),
        "adjustmentEnabled", sol::property(&Environment::getAdjustmentEnabled, &Environment::setAdjustmentEnabled),
        "adjustmentSaturation", sol::property(&Environment::getAdjustmentSaturation, &Environment::setAdjustmentSaturation),
        "ambientLightColor", sol::property(&Environment::getAmbientLightColor, &Environment::setAmbientLightColor),
        "ambientLightEnergy", sol::property(&Environment::getAmbientLightEnergy, &Environment::setAmbientLightEnergy),
        "ambientLightSkyContribution", sol::property(&Environment::getAmbientLightSkyContribution, &Environment::setAmbientLightSkyContribution),
        "ambientLightSource", sol::property(&Environment::getAmbientLightSource, &Environment::setAmbientLightSource),
        "backgroundCameraFeedId", sol::property(&Environment::getBackgroundCameraFeedId, &Environment::setBackgroundCameraFeedId),
        "backgroundCanvasMaxLayer", sol::property(&Environment::getBackgroundCanvasMaxLayer, &Environment::setBackgroundCanvasMaxLayer),
        "backgroundColor", sol::property(&Environment::getBackgroundColor, &Environment::setBackgroundColor),
        "backgroundEnergyMultiplier", sol::property(&Environment::getBackgroundEnergyMultiplier, &Environment::setBackgroundEnergyMultiplier),
        "backgroundIntensity", sol::property(&Environment::getBackgroundIntensity, &Environment::setBackgroundIntensity),
        "backgroundMode", sol::property(&Environment::getBackgroundMode, &Environment::setBackgroundMode),
        "fogAerialPerspective", sol::property(&Environment::getFogAerialPerspective, &Environment::setFogAerialPerspective),
        "fogDensity", sol::property(&Environment::getFogDensity, &Environment::setFogDensity),
        "fogDepthBegin", sol::property(&Environment::getFogDepthBegin, &Environment::setFogDepthBegin),
        "fogDepthCurve", sol::property(&Environment::getFogDepthCurve, &Environment::setFogDepthCurve),
        "fogDepthEnd", sol::property(&Environment::getFogDepthEnd, &Environment::setFogDepthEnd),
        "fogEnabled", sol::property(&Environment::getFogEnabled, &Environment::setFogEnabled),
        "fogHeight", sol::property(&Environment::getFogHeight, &Environment::setFogHeight),
        "fogHeightDensity", sol::property(&Environment::getFogHeightDensity, &Environment::setFogHeightDensity),
        "fogLightColor", sol::property(&Environment::getFogLightColor, &Environment::setFogLightColor),
        "fogLightEnergy", sol::property(&Environment::getFogLightEnergy, &Environment::setFogLightEnergy),
        "fogMode", sol::property(&Environment::getFogMode, &Environment::setFogMode),
        "fogSkyAffect", sol::property(&Environment::getFogSkyAffect, &Environment::setFogSkyAffect),
        "fogSunScatter", sol::property(&Environment::getFogSunScatter, &Environment::setFogSunScatter),
        "glowBlendMode", sol::property(&Environment::getGlowBlendMode, &Environment::setGlowBlendMode),
        "glowBloom", sol::property(&Environment::getGlowBloom, &Environment::setGlowBloom),
        "glowEnabled", sol::property(&Environment::getGlowEnabled, &Environment::setGlowEnabled),
        "glowHdrLuminanceCap", sol::property(&Environment::getGlowHdrLuminanceCap, &Environment::setGlowHdrLuminanceCap),
        "glowHdrScale", sol::property(&Environment::getGlowHdrScale, &Environment::setGlowHdrScale),
        "glowHdrThreshold", sol::property(&Environment::getGlowHdrThreshold, &Environment::setGlowHdrThreshold),
        "glowIntensity", sol::property(&Environment::getGlowIntensity, &Environment::setGlowIntensity),
        "glowLevel1", sol::property(&Environment::getGlowLevel1, &Environment::setGlowLevel1),
        "glowLevel2", sol::property(&Environment::getGlowLevel2, &Environment::setGlowLevel2),
        "glowLevel3", sol::property(&Environment::getGlowLevel3, &Environment::setGlowLevel3),
        "glowLevel4", sol::property(&Environment::getGlowLevel4, &Environment::setGlowLevel4),
        "glowLevel5", sol::property(&Environment::getGlowLevel5, &Environment::setGlowLevel5),
        "glowLevel6", sol::property(&Environment::getGlowLevel6, &Environment::setGlowLevel6),
        "glowLevel7", sol::property(&Environment::getGlowLevel7, &Environment::setGlowLevel7),
        "glowMap", sol::property(&Environment::getGlowMap, &Environment::setGlowMap),
        "glowMapStrength", sol::property(&Environment::getGlowMapStrength, &Environment::setGlowMapStrength),
        "glowMix", sol::property(&Environment::getGlowMix, &Environment::setGlowMix),
        "glowNormalized", sol::property(&Environment::getGlowNormalized, &Environment::setGlowNormalized),
        "glowStrength", sol::property(&Environment::getGlowStrength, &Environment::setGlowStrength),
        "reflectedLightSource", sol::property(&Environment::getReflectedLightSource, &Environment::setReflectedLightSource),
        "dynamicGiBounceFeedback", sol::property(&Environment::getDynamicGiBounceFeedback, &Environment::setDynamicGiBounceFeedback),
        "dynamicGiCascade0Distance", sol::property(&Environment::getDynamicGiCascade0Distance, &Environment::setDynamicGiCascade0Distance),
        "dynamicGiCascades", sol::property(&Environment::getDynamicGiCascades, &Environment::setDynamicGiCascades),
        "dynamicGiEnabled", sol::property(&Environment::getDynamicGiEnabled, &Environment::setDynamicGiEnabled),
        "dynamciGiEnergy", sol::property(&Environment::getDynamicGiEnergy, &Environment::setDynamicGiEnergy),
        "dynamicGiMaxDistance", sol::property(&Environment::getDynamicGiMaxDistance, &Environment::setDynamicGiMaxDistance),
        "dynamicGiMinCellSize", sol::property(&Environment::getDynamicGiMinCellSize, &Environment::setDynamicGiMinCellSize),
        "dynamicGiNormalBias", sol::property(&Environment::getDynamicGiNormalBias, &Environment::setDynamicGiNormalBias),
        "dynamicGiProbeBias", sol::property(&Environment::getDynamicGiProbeBias, &Environment::setDynamicGiProbeBias),
        "dynamicGiUseOcclusion", sol::property(&Environment::getDynamicGiUseOcclusion, &Environment::setDynamicGiUseOcclusion),
        "dynamicGiYScale", sol::property(&Environment::getDynamicGiYScale, &Environment::setDynamicGiYScale),
        "sky", sol::property(&Environment::getSky, &Environment::setSky),
        "skyCustomFov", sol::property(&Environment::getSkyCustomFov, &Environment::setSkyCustomFov),
        "skyRotation", sol::property(&Environment::getSkyRotation, &Environment::setSkyRotation),
        "ssaoAoChannelAffect", sol::property(&Environment::getSsaoAoChannelAffect, &Environment::setSsaoAoChannelAffect),
        "ssaoDetail", sol::property(&Environment::getSsaoDetail, &Environment::setSsaoDetail),
        "ssaoEnabled", sol::property(&Environment::getSsaoEnabled, &Environment::setSsaoEnabled),
        "ssaoHorizon", sol::property(&Environment::getSsaoHorizon, &Environment::setSsaoHorizon),
        "ssaoIntensity", sol::property(&Environment::getSsaoIntensity, &Environment::setSsaoIntensity),
        "ssaoLightAffect", sol::property(&Environment::getSsaoLightAffect, &Environment::setSsaoLightAffect),
        "ssaoPower", sol::property(&Environment::getSsaoPower, &Environment::setSsaoPower),
        "ssaoRadius", sol::property(&Environment::getSsaoRadius, &Environment::setSsaoRadius),
        "ssaoSharpness", sol::property(&Environment::getSsaoSharpness, &Environment::setSsaoSharpness),
        "ssilEnabled", sol::property(&Environment::getSsilEnabled, &Environment::setSsilEnabled),
        "ssilIntensity", sol::property(&Environment::getSsilIntensity, &Environment::setSsilIntensity),
        "ssilNormalRejection", sol::property(&Environment::getSsilNormalRejection, &Environment::setSsilNormalRejection),
        "ssilRadius", sol::property(&Environment::getSsilRadius, &Environment::setSsilRadius),
        "ssilSharpness", sol::property(&Environment::getSsilSharpness, &Environment::setSsilSharpness),
        "ssrDepthTolerance", sol::property(&Environment::getSsrDepthTolerance, &Environment::setSsrDepthTolerance),
        "ssrEnabled", sol::property(&Environment::getSsrEnabled, &Environment::setSsrEnabled),
        "ssrFadeIn", sol::property(&Environment::getSsrFadeIn, &Environment::setSsrFadeIn),
        "ssrFadeOut", sol::property(&Environment::getSsrFadeOut, &Environment::setSsrFadeOut),
        "ssrMaxSteps", sol::property(&Environment::getSsrMaxSteps, &Environment::setSsrMaxSteps),
        "tonemapExposure", sol::property(&Environment::getTonemapExposure, &Environment::setTonemapExposure),
        "tonemapMode", sol::property(&Environment::getTonemapMode, &Environment::setTonemapMode),
        "tonemapWhite", sol::property(&Environment::getTonemapWhite, &Environment::setTonemapWhite),
        "volumetricFogAlbedo", sol::property(&Environment::getVolumetricFogAlbedo, &Environment::setVolumetricFogAlbedo),
        "volumetricFogAmbientInject", sol::property(&Environment::getVolumetricFogAmbientInject, &Environment::setVolumetricFogAmbientInject),
        "volumetricFogAnisotropy", sol::property(&Environment::getVolumetricFogAnisotropy, &Environment::setVolumetricFogAnisotropy),
        "volumetricFogDensity", sol::property(&Environment::getVolumetricFogDensity, &Environment::setVolumetricFogDensity),
        "volumetricFogDetailSpread", sol::property(&Environment::getVolumetricFogDetailSpread, &Environment::setVolumetricFogDetailSpread),
        "volumetricFogEmission", sol::property(&Environment::getVolumetricFogEmission, &Environment::setVolumetricFogEmission),
        "volumetricFogEnabled", sol::property(&Environment::getVolumetricFogEnabled, &Environment::setVolumetricFogEnabled),
        "volumetricFogGiInject", sol::property(&Environment::getVolumetricFogGiInject, &Environment::setVolumetricFogGiInject),
        "volumetricFogLength", sol::property(&Environment::getVolumetricFogLength, &Environment::setVolumetricFogLength),
        "volumetricFogSkyAffect", sol::property(&Environment::getVolumetricFogSkyAffect, &Environment::setVolumetricFogSkyAffect),
        "volumetricFogTemporalReprojectionAmount", sol::property(&Environment::getVolumetricFogTemporalReprojectionAmount, &Environment::setVolumetricFogTemporalReprojectionAmount),
        "volumetricFogTemporalReprojectionEnabled", sol::property(&Environment::getVolumetricFogTemporalReprojectionEnabled, &Environment::setVolumetricFogTemporalReprojectionEnabled),
        "getGlowLevel", &Environment::getGlowLevel,
        "setGlowLevel", &Environment::setGlowLevel,
        "cast", [](Resource* resource) {
            return new Environment(Object::cast_to<GodotEnvironment>(resource->getResource()));
        }
    );
}