#include "lua_bind.h"

void kenai::core::bind_vector2(sol::state& lua) {
    lua.new_usertype<Vector2>(
        "Vector2",
        sol::constructors<Vector2(), Vector2(float, float)>(),
        "x", &Vector2::x,
        "y", &Vector2::y,
        "normalize", &Vector2::normalize,
        "normalized", &Vector2::normalized,
        "isNormalized", &Vector2::is_normalized,
        "length", &Vector2::length,
        "lengthSquared", &Vector2::length_squared,
        "limitLength", &Vector2::limit_length,
        "min", &Vector2::min,
        "max", &Vector2::max,
        "distanceTo", &Vector2::distance_to,
        "distanceSquaredTo", &Vector2::distance_squared_to,
        "angleTo", &Vector2::angle_to,
        "angleToPoint", &Vector2::angle_to_point,
        "dot", &Vector2::dot,
        "posmod", &Vector2::posmod,
        "posmodv", &Vector2::posmodv,
        "project", &Vector2::project,
        "planeProject", &Vector2::plane_project,
        "lerp", &Vector2::lerp,
        "slerp", &Vector2::slerp,
        "cubicInterpolate", &Vector2::cubic_interpolate,
        "cubicInterpolateInTime", &Vector2::cubic_interpolate_in_time,
        "bezierInterpolate", &Vector2::bezier_interpolate,
        "moveToward", &Vector2::move_toward,
        "slide", &Vector2::slide,
        "bounce", &Vector2::bounce,
        "reflect", &Vector2::reflect,
        "isEqualApprox", &Vector2::is_equal_approx,
        "isZeroApprox", &Vector2::is_zero_approx,
        "angle", &Vector2::angle,
        "abs", &Vector2::abs,
        "rotated", &Vector2::rotated,
        "orthogonal", &Vector2::orthogonal,
        "sign", &Vector2::sign,
        "floor", &Vector2::floor,
        "ceil", &Vector2::ceil,
        "round", &Vector2::round,
        "snapped", &Vector2::snapped,
        "clamp", &Vector2::clamp,
        "aspect", &Vector2::aspect,
        "tostring", [](const Vector2& v) { return std::string((v.operator String()).utf8().get_data()); }
    );
}