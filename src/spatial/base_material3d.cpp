#include "base_material3d.h"

void kenai::spatial::bindBaseMaterial3D(sol::state_view& lua) {
    auto ut = lua.new_usertype<kenai::spatial::BaseMaterial3D>("BaseMaterial3D",
        "new", sol::factories(
            []() { return new kenai::spatial::BaseMaterial3D(); }
        ),
        sol::base_classes, sol::bases<kenai::core::BaseObject, kenai::core::Resource, kenai::core::Material>(),
        "albedoColor", sol::property(&BaseMaterial3D::getAlbedoColor, &BaseMaterial3D::setAlbedoColor),
        "albedoTexture", sol::property(&BaseMaterial3D::getAlbedoTexture, &BaseMaterial3D::setAlbedoTexture),
        "albedoTextureForceSrgb", sol::property(&BaseMaterial3D::getAlbedoTextureForceSrgb, &BaseMaterial3D::setAlbedoTextureForceSrgb),
        "albedoTextureMsdf", sol::property(&BaseMaterial3D::getAlbedoTextureMsdf, &BaseMaterial3D::setAlbedoTextureMsdf),
        "alphaAntialiasingEdge", sol::property(&BaseMaterial3D::getAlphaAntialiasingEdge, &BaseMaterial3D::setAlphaAntialiasingEdge),
        "alphaAntialiasingMode", sol::property(&BaseMaterial3D::getAlphaAntialiasingMode, &BaseMaterial3D::setAlphaAntialiasingMode),
        "alphaHashScale", sol::property(&BaseMaterial3D::getAplhaHashScale, &BaseMaterial3D::setAlphaHashScale),
        "alphaScissorThreshold", sol::property(&BaseMaterial3D::getAlphaScissorThreshold, &BaseMaterial3D::setAlphaScissorThreshold),
        "anisotropy", sol::property(&BaseMaterial3D::getAnisotropy, &BaseMaterial3D::setAnisotropy),
        "anisotropyEnabled", sol::property(&BaseMaterial3D::getAnisotropyEnabled, &BaseMaterial3D::setAnisotropyEnabled),
        "anisotropyFlowmap", sol::property(&BaseMaterial3D::getAnisotropyFlowmap, &BaseMaterial3D::setAnisotropyFlowmap),
        "aoEnabled", sol::property(&BaseMaterial3D::getAoEnabled, &BaseMaterial3D::setAoEnabled),
        "aoLightAffect", sol::property(&BaseMaterial3D::getAoLightAffect, &BaseMaterial3D::setAoLightAffect),
        "aoOnUv2", sol::property(&BaseMaterial3D::getAoOnUv2, &BaseMaterial3D::setAoOnUv2),
        "aoTexture", sol::property(&BaseMaterial3D::getAoTexture, &BaseMaterial3D::setAoTexture),
        "aoTextureChannel", sol::property(&BaseMaterial3D::getAoTextureChannel, &BaseMaterial3D::setAoTextureChannel),
        "backlight", sol::property(&BaseMaterial3D::getBacklight, &BaseMaterial3D::setBacklight),
        "backlightEnabled", sol::property(&BaseMaterial3D::getBacklightEnabled, &BaseMaterial3D::setBacklightEnabled),
        "backlightTexture", sol::property(&BaseMaterial3D::getBacklightTexture, &BaseMaterial3D::setBacklightTexture),
        "billboardKeepScale", sol::property(&BaseMaterial3D::getBillboardKeepScale, &BaseMaterial3D::setBillboardKeepScale),
        "billboardMode", sol::property(&BaseMaterial3D::getBillboardMode, &BaseMaterial3D::setBillboardMode),
        "blendMode", sol::property(&BaseMaterial3D::getBlendMode, &BaseMaterial3D::setBlendMode),
        "clearcoat", sol::property(&BaseMaterial3D::getClearcoat, &BaseMaterial3D::setClearcoat),
        "clearcoatEnabled", sol::property(&BaseMaterial3D::getClearcoatEnabled, &BaseMaterial3D::setClearcoatEnabled),
        "clearcoatRoughness", sol::property(&BaseMaterial3D::getClearcoatRoughness, &BaseMaterial3D::setClearcoatRoughness),
        "clearcoatTexture", sol::property(&BaseMaterial3D::getClearcoatTexture, &BaseMaterial3D::setClearcoatTexture),
        "cullMode", sol::property(&BaseMaterial3D::getCullMode, &BaseMaterial3D::setCullMode),
        "depthDrawMode", sol::property(&BaseMaterial3D::getDepthDrawMode, &BaseMaterial3D::setDepthDrawMode),
        "detailAlbedo", sol::property(&BaseMaterial3D::getDetailAlbedo, &BaseMaterial3D::setDetailAlbedo),
        "detailBlendMode", sol::property(&BaseMaterial3D::getDetailBlendMode, &BaseMaterial3D::setDetailBlendMode),
        "detailEnabled", sol::property(&BaseMaterial3D::getDetailEnabled, &BaseMaterial3D::setDetailEnabled),
        "detailMask", sol::property(&BaseMaterial3D::getDetailMask, &BaseMaterial3D::setDetailMask),
        "detailNormal", sol::property(&BaseMaterial3D::getDetailNormal, &BaseMaterial3D::setDetailNormal),
        "detailUvLayer", sol::property(&BaseMaterial3D::getDetailUvLayer, &BaseMaterial3D::setDetailUvLayer),
        "diffuseMode", sol::property(&BaseMaterial3D::getDiffuseMode, &BaseMaterial3D::setDiffuseMode),
        "disableAmbientLight", sol::property(&BaseMaterial3D::getDisableAmbientLight, &BaseMaterial3D::setDisableAmbientLight),
        "disableFog", sol::property(&BaseMaterial3D::getDisableFog, &BaseMaterial3D::setDisableFog),
        "disableReceiveShadows", sol::property(&BaseMaterial3D::getDisableReceiveShadows, &BaseMaterial3D::setDisableReceiveShadows),
        "distanceFadeMaxDistance", sol::property(&BaseMaterial3D::getDistanceFadeMaxDistance, &BaseMaterial3D::setDistanceFadeMaxDistance),
        "distanceFadeMinDistance", sol::property(&BaseMaterial3D::getDistanceFadeMinDistance, &BaseMaterial3D::setDistanceFadeMinDistance),
        "distanceFadeMode", sol::property(&BaseMaterial3D::getDistanceFadeMode, &BaseMaterial3D::setDistanceFadeMode),
        "emission", sol::property(&BaseMaterial3D::getEmission, &BaseMaterial3D::setEmission),
        "emissionEnabled", sol::property(&BaseMaterial3D::getEmissionEnabled, &BaseMaterial3D::setEmissionEnabled),
        "emissionEnergyMultiplier", sol::property(&BaseMaterial3D::getEmissionEnergyMultiplier, &BaseMaterial3D::setEmissionEnergyMultiplier),
        "emissionIntensity", sol::property(&BaseMaterial3D::getEmissionIntensity, &BaseMaterial3D::setEmissionIntensity),
        "emissionOnUv2", sol::property(&BaseMaterial3D::getEmissionOnUv2, &BaseMaterial3D::setEmissionOnUv2),
        "emissionOperator", sol::property(&BaseMaterial3D::getEmissionOperator, &BaseMaterial3D::setEmissionOperator),
        "emissionTexture", sol::property(&BaseMaterial3D::getEmissionTexture, &BaseMaterial3D::setEmissionTexture),
        "fixedSize", sol::property(&BaseMaterial3D::getFixedSize, &BaseMaterial3D::setFixedSize),
        "grow", sol::property(&BaseMaterial3D::getGrow, &BaseMaterial3D::setGrow),
        "growAmount", sol::property(&BaseMaterial3D::getGrowAmount, &BaseMaterial3D::setGrowAmount),
        "heightmapDeepParallax", sol::property(&BaseMaterial3D::getHeightmapDeepParallax, &BaseMaterial3D::setHeightmapDeepParallax),
        "heightmapEnabled", sol::property(&BaseMaterial3D::getHeightmapEnabled, &BaseMaterial3D::setHeightmapEnabled),
        "heightmapFlipBinormal", sol::property(&BaseMaterial3D::getHeightmapFlipBinormal, &BaseMaterial3D::setHeightmapFlipBinormal),
        "heightmapFlipTangent", sol::property(&BaseMaterial3D::getHeightmapFlipTangent, &BaseMaterial3D::setHeightmapFlipTangent),
        "heightmapFlipTexture", sol::property(&BaseMaterial3D::getHeightmapFlipTexture, &BaseMaterial3D::setHeightmapFlipTexture),
        "heightmapMaxLayers", sol::property(&BaseMaterial3D::getHeightmapMaxLayers, &BaseMaterial3D::setHeightmapMaxLayers),
        "heightmapMinLayers", sol::property(&BaseMaterial3D::getHeightmapMinLayers, &BaseMaterial3D::setHeightmapMinLayers),
        "heightmapScale", sol::property(&BaseMaterial3D::getHeightmapScale, &BaseMaterial3D::setHeightmapScale),
        "heightmapTexture", sol::property(&BaseMaterial3D::getHeightmapTexture, &BaseMaterial3D::setHeightmapTexture),
        "metallic", sol::property(&BaseMaterial3D::getMetallic, &BaseMaterial3D::setMetallic),
        "metallicSpecular", sol::property(&BaseMaterial3D::getMetallicSpecular, &BaseMaterial3D::setMetallicSpecular),
        "metallicTexture", sol::property(&BaseMaterial3D::getMetallicTexture, &BaseMaterial3D::setMetallicTexture),
        "metalicTextureChannel", sol::property(&BaseMaterial3D::getMetallicTextureChannel, &BaseMaterial3D::setMetallicTextureChannel),
        "msdfOutlineSize", sol::property(&BaseMaterial3D::getMsdfOutlineSize, &BaseMaterial3D::setMsdfOutlineSize),
        "msdfPixelRange", sol::property(&BaseMaterial3D::getMsdfPixelRange, &BaseMaterial3D::setMsdfPixelRange),
        "noDepthTest", sol::property(&BaseMaterial3D::getNoDepthTest, &BaseMaterial3D::setNoDepthTest),
        "normalEnabled", sol::property(&BaseMaterial3D::getNormalEnabled, &BaseMaterial3D::setNormalEnabled),
        "normalScale", sol::property(&BaseMaterial3D::getNormalScale, &BaseMaterial3D::setNormalScale),
        "normalTexture", sol::property(&BaseMaterial3D::getNormalTexture, &BaseMaterial3D::setNormalTexture),
        "ormTexture", sol::property(&BaseMaterial3D::getOrmTexture, &BaseMaterial3D::setOrmTexture),
        "particlesAnimHFrames", sol::property(&BaseMaterial3D::getParticlesAnimHFrames, &BaseMaterial3D::setParticlesAnimHFrames),
        "particlesAnimLoop", sol::property(&BaseMaterial3D::getParticlesAnimLoop, &BaseMaterial3D::setParticlesAnimLoop),
        "particlesAnimVFrames", sol::property(&BaseMaterial3D::getParticlesAnimVFrames, &BaseMaterial3D::setParticlesAnimVFrames),
        "pointSize", sol::property(&BaseMaterial3D::getPointSize, &BaseMaterial3D::setPointSize),
        "proximityFadeDistance", sol::property(&BaseMaterial3D::getProximityFadeDistance, &BaseMaterial3D::setProximityFadeDistance),
        "proximityFadeEnabled", sol::property(&BaseMaterial3D::getProximityFadeEnabled, &BaseMaterial3D::setProximityFadeEnabled),
        "refractionEnabled", sol::property(&BaseMaterial3D::getRefractionEnabled, &BaseMaterial3D::setRefractionEnabled),
        "refractionScale", sol::property(&BaseMaterial3D::getRefractionScale, &BaseMaterial3D::setRefractionScale),
        "refractionTexture", sol::property(&BaseMaterial3D::getRefractionTexture, &BaseMaterial3D::setRefractionTexture),
        "refractionTextureChannel", sol::property(&BaseMaterial3D::getRefractionTextureChannel, &BaseMaterial3D::setRefractionTextureChannel),
        "rim", sol::property(&BaseMaterial3D::getRim, &BaseMaterial3D::setRim),
        "rimEnabled", sol::property(&BaseMaterial3D::getRimEnabled, &BaseMaterial3D::setRimEnabled),
        "rimTexture", sol::property(&BaseMaterial3D::getRimTexture, &BaseMaterial3D::setRimTexture),
        "rimTint", sol::property(&BaseMaterial3D::getRimTint, &BaseMaterial3D::setRimTint),
        "roughness", sol::property(&BaseMaterial3D::getRoughness, &BaseMaterial3D::setRoughness),
        "roughnessTexture", sol::property(&BaseMaterial3D::getRoughnessTexture, &BaseMaterial3D::setRoughnessTexture),
        "roughnessTextureChannel", sol::property(&BaseMaterial3D::getRoughnessTextureChannel, &BaseMaterial3D::setRoughnessTextureChannel),
        "shadingMode", sol::property(&BaseMaterial3D::getShadingMode, &BaseMaterial3D::setShadingMode),
        "shadowToOpacity", sol::property(&BaseMaterial3D::getShadowToOpacity, &BaseMaterial3D::setShadowToOpacity),
        "specularMode", sol::property(&BaseMaterial3D::getSpecularMode, &BaseMaterial3D::setSpecularMode),
        "subsurfScatterEnabled", sol::property(&BaseMaterial3D::getSubsurfScatterEnabled, &BaseMaterial3D::setSubsurfScatterEnabled),
        "subsurfScatterSkinMode", sol::property(&BaseMaterial3D::getSubsurfScatterSkinMode, &BaseMaterial3D::setSubsurfScatterSkinMode),
        "subsurfScatterStrength", sol::property(&BaseMaterial3D::getSubsurfScatterStrength, &BaseMaterial3D::setSubsurfScatterStrength),
        "subsurfScatterTexture", sol::property(&BaseMaterial3D::getSubsurfScatterTexture, &BaseMaterial3D::setSubsurfScatterTexture),
        "subsurfScatterTransmittanceBoost", sol::property(&BaseMaterial3D::getSubsurfScatterTransmittanceBoost, &BaseMaterial3D::setSubsurfScatterTransmittanceBoost),
        "subsurfScatterTransmittanceColor", sol::property(&BaseMaterial3D::getSubsurfScatterTransmittanceColor, &BaseMaterial3D::setSubsurfScatterTransmittanceColor),
        "SubsurfScatterTransmittanceDepth", sol::property(&BaseMaterial3D::getSubsurfScatterTransmittanceDepth, &BaseMaterial3D::setSubsurfScatterTransmittanceDepth),
        "subsurfScatterTransmittanceEnabled", sol::property(&BaseMaterial3D::getSubsurfScatterTransmittanceEnabled, &BaseMaterial3D::setSubsurfScatterTransmittanceEnabled),
        "subsurfScatterTransmittanceTexture", sol::property(&BaseMaterial3D::getSubsurfScatterTransmittanceTexture, &BaseMaterial3D::setSubsurfScatterTransmittanceTexture),
        "textureFilter", sol::property(&BaseMaterial3D::getTextureFilter, &BaseMaterial3D::setTextureFilter),
        "textureRepeat", sol::property(&BaseMaterial3D::getTextureRepeat, &BaseMaterial3D::setTextureRepeat),
        "transparency", sol::property(&BaseMaterial3D::getTransparency, &BaseMaterial3D::setTransparency),
        "useParticleTrails", sol::property(&BaseMaterial3D::getUseParticleTrails, &BaseMaterial3D::setUseParticleTrails),
        "usePointSize", sol::property(&BaseMaterial3D::getUsePointSize, &BaseMaterial3D::setUsePointSize),
        "uv1Offset", sol::property(&BaseMaterial3D::getUv1Offset, &BaseMaterial3D::setUv1Offset),
        "uv1Scale", sol::property(&BaseMaterial3D::getUv1Scale, &BaseMaterial3D::setUv1Scale),
        "uv1Triplanar", sol::property(&BaseMaterial3D::getUv1Triplanar, &BaseMaterial3D::setUv1Triplanar),
        "uv1TriplanarSharpness", sol::property(&BaseMaterial3D::getUv1TriplanarSharpness, &BaseMaterial3D::setUv1TriplanarSharpness),
        "uv1WorldTriplanar", sol::property(&BaseMaterial3D::getUv1WorldTriplanar, &BaseMaterial3D::setUv1WorldTriplanar),
        "uv2Offset", sol::property(&BaseMaterial3D::getUv2Offset, &BaseMaterial3D::setUv2Offset),
        "uv2Scale", sol::property(&BaseMaterial3D::getUv2Scale, &BaseMaterial3D::setUv2Scale),
        "uv2Triplanar", sol::property(&BaseMaterial3D::getUv2Triplanar, &BaseMaterial3D::setUv2Triplanar),
        "uv2TriplanarSharpness", sol::property(&BaseMaterial3D::getUv2TriplanarSharpness, &BaseMaterial3D::setUv2TriplanarSharpness),
        "uv2WorldTriplanar", sol::property(&BaseMaterial3D::getUv2WorldTriplanar, &BaseMaterial3D::setUv2WorldTriplanar),
        "vertexColorIsSrgb", sol::property(&BaseMaterial3D::getVertexColorIsSrgb, &BaseMaterial3D::setVertexColorIsSrgb),
        "vertexColorUseAsAlbedo", sol::property(&BaseMaterial3D::getVertexColorUseAsAlbedo, &BaseMaterial3D::setVertexColorUseAsAlbedo),
        //"setTexture", &BaseMaterial3D::setTexture,
        "cast", [](kenai::core::Resource* res) {
            return new BaseMaterial3D(
                Object::cast_to<GodotBaseMaterial3D>(res->getResource())
            );
        }
    );

    ut["getFeature"] = &BaseMaterial3D::getFeature;
    ut["getFlag"] = &BaseMaterial3D::getFlag;
    ut["getTexture"] = &BaseMaterial3D::getTexture;
    ut["setFeature"] = &BaseMaterial3D::setFeature;
    ut["setFlag"] = &BaseMaterial3D::setFlag;
}