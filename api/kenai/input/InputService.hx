package kenai.input;

import kenai.core.Resource;
import kenai.core.Vector2;
import kenai.core.Dictionary;
import kenai.core.Vector;
import kenai.core.Vector3;
import kenai.core.Event;
import kenai.core.Service;

@:native("InputService")
extern class InputService extends Service {
    public static var emulateMouseFromTouch: Bool;
    public static var emulateTouchFromMouse: Bool;
    public static var mouseMode: Int;
    public static var useAccumulatedInput: Bool;
    public static var joyConnectionChanged: Event;
    public static function actionPress(action: String, ?strength: Float): Void;
    public static function actionRelease(action: String): Void;
    public static function addJoyMapping(mapping: String, ?updateExisting: Bool): Void;
    public static function flushBufferedEvents(): Void;
    public static function getAccelerometer(): Vector3;
    public static function getActionRawStrength(action: String, ?exactMatch: Bool): Float;
    public static function getActionStrength(action: String, ?exactMatch: Bool): Float;
    public static function getAxis(negativeAction: String, positiveAction: String): Float;
    public static function getConnectedJoypads(): Vector<Int>;
    public static function getCurrentCursorShape(): Int;
    public static function getGravity(): Vector3;
    public static function getGyroscope(): Vector3;
    public static function getJoyAxis(device: Int, axis: Int): Float;
    public static function getJoyGuid(device: Int): String;
    public static function getJoyInfo(device: Int): Dictionary;
    public static function getJoyName(device: Int): String;
    public static function getJoyVibrationDuration(device: Int): Float;
    public static function getJoyVibrationStrength(device: Int): Vector2;
    public static function getLastMouseScreenVelocity(): Vector2;
    public static function getLastMouseVelocity(): Vector2;
    public static function getMagnetometer(): Vector3;
    public static function getMouseButtonMask(): Int;
    public static function getVector(negativeX: String, positiveX: String, negativeY: String, positiveY: String): Vector2;
    public static function isActionJustPressed(action: String, ?exactMatch: Bool): Bool;
    public static function isActionJustReleased(action: String, ?exactMatch: Bool): Bool;
    public static function isActionPressed(action: String, ?exactMatch: Bool): Bool;
    public static function isAnythingPressed(): Bool;
    public static function isJoyButtonPressed(device: Int, button: Int): Bool;
    public static function isJoyKnown(device: Int): Bool;
    public static function isKeyLabelPressed(keycode: Int): Bool;
    public static function isKeyPressed(keycode: Int): Bool;
    public static function isMouseButtonPressed(button: Int): Bool;
    public static function isPhysicalKeyPressed(keycode: Int): Bool;
    public static function parseInputEvent(event: InputEvent): Void;
    public static function removeJoyMapping(guid: String): Void;
    public static function setAccelerometer(value: Vector3): Void;
    public static function setCustomMouseCursor(image: Resource, ?shape: Int, ?hotspot: Vector2): Void;
    public static function setDefaultCursorShape(?shape: Int): Void;
    public static function setGravity(value: Vector3): Void;
    public static function setGyroscope(value: Vector3): Void;
    public static function setMagnetometer(value: Vector3): Void;
    public static function shouldIgnoreDevice(venderID: Int, productID: Int): Bool;
    public static function startJoyVibration(device: Int, weakMagnitude: Float, strongMagnitude: Float, ?duration: Float): Void;
    public static function stopJoyVibration(device: Int): Void;
    public static function vibrateHandheld(?durationMs: Int, ?amplitude: Float): Void;
    public static function warpMouse(position: Vector2): Void;
}